#!/bin/bash
#
# Run a command several times and determine the ratio of successful to
# unseccessful executions.
#
# Usage:
#   intermit [options] <command>

usage() {
  echo "Usage: intermit [options] <command>"
}

# Colors.
RED='\033[0;31m'
GREEN='\033[1;32m'
BLUE='\033[1;34m'
WHITE='\033[1;37m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Ensure we have at least one argument.
arg_count=1
if [ $# -lt "$arg_count" ]; then
    usage
    exit 1
fi

runs=20

# Parse command line options.
while getopts ":n:" opt; do
#              ^ ^ second colon indicates that option -a takes an argument
#              ^ first colon suppresses getopts errors
    case "$opt" in
        n)
            if [[ $OPTARG =~ ^-?[0-9]+$ ]]; then
               runs="$OPTARG"
            else
              echo "Option -n requires an integer argument." >&2
              exit
            fi
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit
            ;;
    esac
done

# Shift the options off the input args.
shift $((OPTIND-1))

results=()

for i in $(seq 1 $runs); do
  "$@"
  results+=($?)
  printf "${BLUE}Completed $i runs${NC}\n"
done

successes=0
failures=0
for result in "${results[@]}"; do
  if [[ $result -eq 0 ]]; then
    ((successes++))
  else
    ((failures++))
  fi
done

output_color="$YELLOW"

if [[ $failures -eq 0 ]]; then
  output_color="$GREEN"
elif [[ $failures -eq $runs ]]; then
  output_color="$RED"
fi

printf "${WHITE}$successes successes and $failures failures.${NC}\n"
printf "${output_color}$successes / $runs${NC}\n"
